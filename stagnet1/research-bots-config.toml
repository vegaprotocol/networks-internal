# Binance exchange info/symbols: https://api.binance.com/api/v1/exchangeInfo

network_config_file = "https://raw.githubusercontent.com/vegaprotocol/networks-internal/main/stagnet1/vegawallet-stagnet1.toml"
debug = false
work_dir = "/opt/workdir"


[http_server]
interface = "0.0.0.0"
port = 80

[vegawallet]
version = "v0.74.0-preview.1" # ignored if auto_version == true
repository = "vegaprotocol/vega"
artifact_name = "vega"
download_wallet_binary = true
auto_version = false

wallet_name = "vegamarketsim"
network_name = "stagnet1"
binary = "vega" # vega binary, as we use vega wallet command
home = "/opt/wallets-mount/wallethome"
passphrase_file = "./assets/passphrase.txt"
tokens_file = "/opt/wallets-mount/wallet-info.json"
state_file = "/opt/wallets-mount/wallet-state.json"

# [scenario.btcusdt_230630]
#     market_name = "BTC/USDT expiry 2023 June 30th"
#     binance_code = "BTCDAI"
#     step_length_seconds = 3
#     [scenario.btcusdt_230630.market_manager_args]
#         market_name = "BTC/USDT expiry 2023 June 30th"
#         market_code = "BTC/USDT-230630"
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 0
#     [scenario.btcusdt_230630.market_maker_args]
#         market_kappa = 0.15
#         market_order_arrival_rate = 100
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.btcusdt_230630.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.btcusdt_230630.random_trader_args]
#         order_intensity = [5, 5, 5, 5, 5, 5]
#         order_volume = [0.01, 0.1, 1.0, 0.01, 0.1, 1.0]
#         step_bias = [0.333, 0.012, 0.003, 0.333, 0.012, 0.003]
#         initial_mint = 1000000
#     [scenario.btcusdt_230630.sensitive_trader_args]
#         scale = [10, 10, 10, 10, 10, 10]
#         max_order_size = [0.001, 0.01, 0.1, 0.001, 0.01, 0.1]
#         initial_mint = 10000
#     [scenario.btcusdt_230630.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.ethusdt_230630]
#     market_name = "ETH/USDT expiry 2023 June 30th"
#     binance_code = "ETHDAI"
#     step_length_seconds = 3
#     [scenario.ethusdt_230630.market_manager_args]
#         market_name = "ETH/USDT expiry 2023 June 30th"
#         market_code = "ETH/USDT-230630"
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 0
#     [scenario.ethusdt_230630.market_maker_args]
#         market_kappa = 0.15
#         market_order_arrival_rate = 100
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 400000
#         initial_mint = 600000
#     [scenario.ethusdt_230630.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.ethusdt_230630.random_trader_args]
#         order_intensity = [45, 45, 45]
#         order_volume = [0.01, 0.1, 1.0]
#         step_bias = [0.333, 0.012, 0.003]
#         initial_mint = 1000000
#     [scenario.ethusdt_230630.sensitive_trader_args]
#         scale = [10, 10, 10]
#         max_order_size = [0.001, 0.01, 0.1]
#         initial_mint = 10000
#     [scenario.ethusdt_230630.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "ETH-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.mainnet_proposal_perps_btcusdt_gnosis]
#     market_name = "BTCUSDT Gnosis Perp"
#     binance_code = "BTCUSDT"
#     step_length_seconds = 5
#     [scenario.mainnet_proposal_perps_btcusdt_gnosis.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 0
#     [scenario.mainnet_proposal_perps_btcusdt_gnosis.market_maker_args]
#         market_kappa = 0.3
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.mainnet_proposal_perps_btcusdt_gnosis.auction_trader_args]
#         traders = 2
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.mainnet_proposal_perps_btcusdt_gnosis.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.mainnet_proposal_perps_btcusdt_gnosis.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.mainnet_proposal_perps_btcusdt_gnosis.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.applemontly]
#     traders_per_thread = 5
#     market_name = "Apple Monthly (Dec 2023)"
#     binance_code = "EOSUSDT"
#     step_length_seconds = 3
#     [scenario.applemontly.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 0
#     [scenario.applemontly.market_maker_args]
#         market_kappa = 1000
#         market_order_arrival_rate = 100
#         order_kappa = 0.5
#         order_size = 1
#         order_levels = 30
#         order_spacing = 0.0001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.applemontly.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.applemontly.random_trader_args]
#         traders = 35
#         order_intensity = [
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10, 
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
            
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10, 
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
            
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10, 
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.applemontly.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.applemontly.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.tsla_quarterly]
#     market_name = "Tesla Quarterly (Feb 2024)"
#     binance_code = "BNBEUR"
#     step_length_seconds = 3
#     [scenario.tsla_quarterly.market_manager_args]
#         asset_name = "tEURO"
#         adp = 5
#         mdp = 5
#         pdp = 0
#     [scenario.tsla_quarterly.market_maker_args]
#         market_kappa = 10
#         market_order_arrival_rate = 100
#         order_kappa = 0.02
#         order_size = 1
#         order_levels = 25
#         order_spacing = 0.5
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 400000
#         initial_mint = 600000
#     [scenario.tsla_quarterly.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.tsla_quarterly.random_trader_args]
#         traders = 35
#         order_intensity = [
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
            
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
            
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#             10,10,10,10,10,10,10,10,10,10,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.tsla_quarterly.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.tsla_quarterly.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "ETH-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.ethusdt_perpetual]
#     market_name = "ETH/USD Perpetual"
#     binance_code = "ETHDAI"
#     step_length_seconds = 3
#     [scenario.ethusdt_perpetual.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 6
#         pdp = 0
#     [scenario.ethusdt_perpetual.market_maker_args]
#         market_kappa = 0.15
#         market_order_arrival_rate = 100
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 400000
#         initial_mint = 600000
#     [scenario.ethusdt_perpetual.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.ethusdt_perpetual.random_trader_args]
#         traders = 35
#         order_intensity = [
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
            
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
            
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#             45, 45, 45, 45, 45, 45, 45, 45, 45, 45,
#         ]
#         order_volume = [
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1,
#             1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01,
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 
            
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1,
#             1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01,
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 
            
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1,
#             1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01,
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.ethusdt_perpetual.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.ethusdt_perpetual.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "ETH-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.daiusd_perpetual]
#     market_name = "DAIUSD Perpetual"
#     binance_code = "DAIUSDT"
#     step_length_seconds = 3
#     [scenario.daiusd_perpetual.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 6
#         pdp = 0
#     [scenario.daiusd_perpetual.market_maker_args]
#         market_kappa = 1000
#         market_order_arrival_rate = 100
#         order_kappa = 0.5
#         order_size = 1
#         order_levels = 30
#         order_spacing = 0.00001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.daiusd_perpetual.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.daiusd_perpetual.random_trader_args]
#         traders = 35
#         order_intensity = [
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.daiusd_perpetual.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,

#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,

#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.daiusd_perpetual.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.btcusdt_monthly]
#     market_name = "BTCUSD Monthly (Dec 2023)"
#     binance_code = "BTCDAI"
#     step_length_seconds = 3
#     [scenario.btcusdt_monthly.market_manager_args]
#         asset_name = "tDAI"
#         adp = 18
#         mdp = 4
#         pdp = 0
#     [scenario.btcusdt_monthly.market_maker_args]
#         market_kappa = 0.15
#         market_order_arrival_rate = 100
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.btcusdt_monthly.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.btcusdt_monthly.random_trader_args]
#         traders = 35
#         order_intensity = [
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.btcusdt_monthly.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.btcusdt_monthly.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.eurusd_perpetual]
#     market_name = "EURUSD Perpetual"
#     binance_code = "EURUSDT"
#     step_length_seconds = 3
#     [scenario.eurusd_perpetual.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 6
#         pdp = 0
#     [scenario.eurusd_perpetual.market_maker_args]
#         market_kappa = 100000
#         market_order_arrival_rate = 100
#         order_kappa = 0.005
#         order_size = 1
#         order_levels = 30
#         order_spacing = 0.0005
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.eurusd_perpetual.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.eurusd_perpetual.random_trader_args]
#         traders = 35
#         order_intensity = [
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.eurusd_perpetual.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.eurusd_perpetual.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.aavedai]
#     market_name = "AAVEDAI Monthly (Dec 2023)"
#     binance_code = "AAVEUSDT"
#     step_length_seconds = 3
#     [scenario.aavedai.market_manager_args]
#         asset_name = "tDAI"
#         adp = 18
#         mdp = 5
#         pdp = 0
#     [scenario.aavedai.market_maker_args]
#         market_kappa = 1
#         market_order_arrival_rate = 100
#         order_kappa = 0.4
#         order_size = 1
#         order_levels = 10
#         order_spacing = 0.2
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.aavedai.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.aavedai.random_trader_args]
#         traders = 35
#         order_intensity = [
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.aavedai.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.aavedai.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.ethbtc_quarterly]
#     market_name = "ETHBTC Quarterly (Feb 2024)"
#     binance_code = "ETHBTC"
#     step_length_seconds = 3
#     [scenario.ethbtc_quarterly.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 8
#         mdp = 5
#         pdp = 0
#     [scenario.ethbtc_quarterly.market_maker_args]
#         market_kappa = 100000
#         market_order_arrival_rate = 100
#         order_kappa = 0.0000001
#         order_size = 1
#         order_levels = 30
#         order_spacing = 0.00001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 800000
#         initial_mint = 1000000
#     [scenario.ethbtc_quarterly.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.ethbtc_quarterly.random_trader_args]
#         traders = 35
#         order_intensity = [
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1,
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001,
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003,
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.ethbtc_quarterly.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.ethbtc_quarterly.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.linkusdt_perpetual]
#     market_name = "LINKUSD Perpetual"
#     binance_code = "LINKUSDT"
#     step_length_seconds = 3
#     [scenario.linkusdt_perpetual.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 0
#     [scenario.linkusdt_perpetual.market_maker_args]
#         market_kappa = 30000
#         market_order_arrival_rate = 100
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 0.001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 400000
#         initial_mint = 600000
#     [scenario.linkusdt_perpetual.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.linkusdt_perpetual.random_trader_args]
#         traders = 35
#         order_intensity = [
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
            
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 
#             5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
#         ]
#         order_volume = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#         ]
#         initial_mint = 1000000
#     [scenario.linkusdt_perpetual.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#         ]
#         initial_mint = 10000
#     [scenario.linkusdt_perpetual.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "LINK-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.ehtdai_monthly]
#     market_name = "ETHDAI Monthly (Dec 2023)"
#     binance_code = "ETHDAI"
#     step_length_seconds = 3
#     [scenario.ehtdai_monthly.market_manager_args]
#         asset_name = "tDAI"
#         adp = 18
#         mdp = 4
#         pdp = 0
#     [scenario.ehtdai_monthly.market_maker_args]
#         market_kappa = 0.15
#         market_order_arrival_rate = 100
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 400000
#         initial_mint = 600000
#     [scenario.ehtdai_monthly.auction_trader_args]
#         initial_volume = 0.001
#         initial_mint = 10000
#     [scenario.ehtdai_monthly.random_trader_args]
#         traders = 35
#         order_intensity = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#         ]
#         order_volume = [
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 
#             1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0,
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01,
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1,
            
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 
#             1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0,
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01,
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1,
            
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 
#             1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0,
#             0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01,
#             0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1, 1.0, 0.01, 0.1,
#         ]
#         step_bias = [
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
            
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 
#             0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 
#             0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333,
#             0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012, 0.003, 0.333, 0.012,
#         ]
#         initial_mint = 1000000
#     [scenario.ehtdai_monthly.sensitive_trader_args]
#         traders = 35
#         scale = [
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
            
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10,
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#             10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 
#         ]
#         max_order_size = [
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
            
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 
#             0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 
#             0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 
#             0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01, 0.1, 0.001, 0.01,
#         ]
#         initial_mint = 10000
#     [scenario.ehtdai_monthly.simulation_args]
#         n_steps = -1
#         granularity = "MINUTE"
#         coinbase_code = "ETH-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.snxusdt_perpetual_uniswap]
#     market_name = "SNXUSD Perpetual"
#     binance_code = "SNXUSDT"
#     step_length_seconds = 5
#     [scenario.snxusdt_perpetual_uniswap.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 3
#         pdp = 1
#     [scenario.snxusdt_perpetual_uniswap.market_maker_args]
#         market_kappa = 30000
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 0.001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.snxusdt_perpetual_uniswap.auction_trader_args]
#         traders = 2
#         initial_volume = 1
#         initial_mint = 10000
#     [scenario.snxusdt_perpetual_uniswap.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.snxusdt_perpetual_uniswap.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.snxusdt_perpetual_uniswap.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.injusdt_perpetual_uniswap]
#     market_name = "INJUSD Perpetual"
#     binance_code = "INJUSDT"
#     step_length_seconds = 5
#     [scenario.injusdt_perpetual_uniswap.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 3
#         pdp = 1
#     [scenario.injusdt_perpetual_uniswap.market_maker_args]
#         market_kappa = 3000
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 0.001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.injusdt_perpetual_uniswap.auction_trader_args]
#         traders = 2
#         initial_volume = 2
#         initial_mint = 10000
#     [scenario.injusdt_perpetual_uniswap.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.injusdt_perpetual_uniswap.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.injusdt_perpetual_uniswap.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


# [scenario.pepe_1000_perpetual_uniswap]
#     market_name = "1000PEPEUSDT Perpetual"
#     binance_code = "PEPEUSDT"
#     feed_price_multiplier = 1000
#     step_length_seconds = 5
#     [scenario.pepe_1000_perpetual_uniswap.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 3
#         pdp = 1
#     [scenario.pepe_1000_perpetual_uniswap.market_maker_args]
#         market_kappa = 30000
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 0.001
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.pepe_1000_perpetual_uniswap.auction_trader_args]
#         traders = 2
#         initial_volume = 100
#         initial_mint = 10000
#     [scenario.pepe_1000_perpetual_uniswap.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.pepe_1000_perpetual_uniswap.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.pepe_1000_perpetual_uniswap.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.btcusdt_pyth_perp]
#     market_name = "BTCUSDT Pyth Perp"
#     binance_code = "BTCUSDT"
#     step_length_seconds = 5
#     [scenario.btcusdt_pyth_perp.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 0
#     [scenario.btcusdt_pyth_perp.market_maker_args]
#         market_kappa = 0.3
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.btcusdt_pyth_perp.auction_trader_args]
#         traders = 2
#         initial_volume = 0.1
#         initial_mint = 10000
#     [scenario.btcusdt_pyth_perp.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.btcusdt_pyth_perp.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.btcusdt_pyth_perp.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false# 

# [scenario.jupusdt_pyth_perp]
#     market_name = "JUPUSDT Pyth Perp"
#     binance_code = "JUPUSDT"
#     step_length_seconds = 5
#     [scenario.jupusdt_pyth_perp.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 3
#         pdp = 1
#     [scenario.jupusdt_pyth_perp.market_maker_args]
#         market_kappa = 60000
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 0.001
#         order_clipping = 10001
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 1500000
#         initial_mint = 2000000
#     [scenario.jupusdt_pyth_perp.auction_trader_args]
#         traders = 2
#         initial_volume = 35
#         initial_mint = 100000
#     [scenario.jupusdt_pyth_perp.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [20, 25, 35, 40, 45, 60, 80, 120, 140, 160, 180] # 
#         step_bias = [0.111, 0.095, 0.050, 0.048, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 20000
#     [scenario.jupusdt_pyth_perp.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [10, 20, 40, 60, 80, 100, 120, 150, 180, 200]
#         initial_mint = 100000
#     [scenario.jupusdt_pyth_perp.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false# 

# [scenario.btcusdt_pyth_mainnet2]
#     market_name = "BTC/USD(USDT)-Perp Mainnet2"
#     binance_code = "BTCUSDT"
#     step_length_seconds = 5
#     [scenario.btcusdt_pyth_mainnet2.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 1
#     [scenario.btcusdt_pyth_mainnet2.market_maker_args]
#         market_kappa = 0.3
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.btcusdt_pyth_mainnet2.auction_trader_args]
#         traders = 2
#         initial_volume = 0.1
#         initial_mint = 10000
#     [scenario.btcusdt_pyth_mainnet2.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.btcusdt_pyth_mainnet2.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.btcusdt_pyth_mainnet2.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false

# [scenario.btcusdt_pyth_mainnet]
#     market_name = "BTC/USD(USDT)-Perp-Mainnet"
#     binance_code = "BTCUSDT"
#     step_length_seconds = 5
#     [scenario.btcusdt_pyth_mainnet.market_manager_args]
#         asset_name = "tUSDC"
#         adp = 6
#         mdp = 4
#         pdp = 1
#     [scenario.btcusdt_pyth_mainnet.market_maker_args]
#         market_kappa = 0.3
#         market_order_arrival_rate = 150
#         order_kappa = 0.15
#         order_size = 1
#         order_levels = 25
#         order_spacing = 1
#         order_clipping = 10000
#         inventory_lower_boundary = -3
#         inventory_upper_boundary = 3
#         fee_amount = 0.0001
#         commitment_amount = 150000
#         initial_mint = 200000
#     [scenario.btcusdt_pyth_mainnet.auction_trader_args]
#         traders = 2
#         initial_volume = 0.1
#         initial_mint = 10000
#     [scenario.btcusdt_pyth_mainnet.random_trader_args]
#         traders = 10
#         order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
#         order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
#         step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
#         initial_mint = 2000
#     [scenario.btcusdt_pyth_mainnet.sensitive_trader_args]
#         traders = 10
#         scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
#         max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
#         initial_mint = 10000
#     [scenario.btcusdt_pyth_mainnet.simulation_args]
#         n_steps = 99999999
#         granularity = "MINUTE"
#         coinbase_code = "BTC-USDT"
#         start_date = "2022-11-01 00:00:00"
#         randomise_history = false


[scenario.mainnet_simulation_btcusdt]
    market_name = "BTC/USD(USDT)-Perp"
    binance_code = "BTCUSDT"
    step_length_seconds = 30
    [scenario.mainnet_simulation_btcusdt.market_manager_args]
        asset_name = "tUSDC"
        adp = 6
        mdp = 1
        pdp = 4
    [scenario.mainnet_simulation_btcusdt.market_maker_args]
        market_kappa = 0.3
        market_order_arrival_rate = 150
        order_kappa = 0.15
        order_size = 1
        order_levels = 25
        order_spacing = 1
        order_clipping = 10000
        inventory_lower_boundary = -3
        inventory_upper_boundary = 3
        fee_amount = 0.0001
        commitment_amount = 150000
        initial_mint = 200000
    [scenario.mainnet_simulation_btcusdt.auction_trader_args]
        traders = 2
        initial_volume = 0.1
        initial_mint = 10000
    [scenario.mainnet_simulation_btcusdt.random_trader_args]
        traders = 10
        order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
        step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
        initial_mint = 2000
    [scenario.mainnet_simulation_btcusdt.sensitive_trader_args]
        traders = 10
        scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
        max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
        initial_mint = 10000
    [scenario.mainnet_simulation_btcusdt.simulation_args]
        n_steps = 99999999
        granularity = "MINUTE"
        coinbase_code = "BTC-USDT"
        start_date = "2022-11-01 00:00:00"
        randomise_history = false

[scenario.mainnet_simulation_injustd]
    market_name = "INJ/USDT-Perpl"
    binance_code = "INJUSDT"
    step_length_seconds = 19
    [scenario.mainnet_simulation_injustd.market_manager_args]
        asset_name = "tUSDC"
        adp = 6
        mdp = 3
        pdp = 1
    [scenario.mainnet_simulation_injustd.market_maker_args]
        market_kappa = 3000
        market_order_arrival_rate = 150
        order_kappa = 0.15
        order_size = 1
        order_levels = 25
        order_spacing = 0.001
        order_clipping = 10000
        inventory_lower_boundary = -3
        inventory_upper_boundary = 3
        fee_amount = 0.0001
        commitment_amount = 150000
        initial_mint = 200000
    [scenario.mainnet_simulation_injustd.auction_trader_args]
        traders = 2
        initial_volume = 2
        initial_mint = 10000
    [scenario.mainnet_simulation_injustd.random_trader_args]
        traders = 10
        order_intensity = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
        order_volume = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.12, 0.14, 0.16, 0.18] # 
        step_bias = [0.111, 0.95, 0.50, 0.48, 0.08, 0.06, 0.05, 0.03, 0.012, 0.008, 0.006]
        initial_mint = 2000
    [scenario.mainnet_simulation_injustd.sensitive_trader_args]
        traders = 10
        scale = [2, 4, 6, 8, 10, 12, 14, 16, 17, 20]
        max_order_size = [0.001, 0.005, 0.01, 0.02, 0.04, 0.06, 0.08, 0.10, 0.12, 0.14]
        initial_mint = 10000
    [scenario.mainnet_simulation_injustd.simulation_args]
        n_steps = 99999999
        granularity = "MINUTE"
        coinbase_code = "BTC-USDT"
        start_date = "2022-11-01 00:00:00"
        randomise_history = false